    This file is part of OneModel, a program to manage knowledge.
    Copyright in each year of 2010, 2013-2014 inclusive, and 2016, Luke A Call; all rights reserved.
    OneModel is free software, distributed under a license that includes honesty, the Golden Rule, guidelines around binary
    distribution, and the GNU Affero General Public License as published by the Free Software Foundation;
    see the file LICENSE for license version and details.
    OneModel is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details.
    You should have received a copy of the GNU Affero General Public License along with OneModel.  If not, see <http://www.gnu.org/licenses/>
-----------------------------------------------------------------------

About this file:
  0) It had dated ideas for development, that were current as of 2014 but there has been much progress, and plans are now kept in my own OM instance, which I hope to share more widely when the sharing features are in place.  This file might still be useful for learning about the long-term vision, if you collapse all then expand the areas of interest.
  1) It is a collapsible outline, where indentation levels are outline levels:  so it's more readable if lines wrap to the same column on which they started (not back to the left margin).  It is conveniently viewable in jedit for example (thus the last line; see jedit's "Folding" menu etc).
  2) It hopefully can cease to exist when OM can store and more conveniently manipulate & share this kind of info.
.

vsgeer (vision, strategy, ...)
  vision
    to the extent possible:
      grow, learn, best tool I can think of for optimizing much other work.
      
      all available knowledge in the most useful possible way, for a person, then for a group, then for the world
      ...in ways that help to enable things like
        full employment among all the trustworthy, 
        easier research (finding data, capturing, sharing, processing), 
        organizing *all* the world's data as best we can, 
        remove the limitations that are imposed by textual formats, 
        better decision-making, better use of time
          ability to choose the likely most *valuable* (not just best-promoted) activities in personal growth and serving others 
            increasing days or quality of life
            saving lives
            mentoring
          .
        .
      .
  strategy
    immed
      done
        entry/viewing of basic data
        make lists/sublists (RelationToGroups and their contents) very useful, efficient
        semi-uniform groups
        some use of color
        searching
        consistently/easiliy creating more complex things with classes (templates)
        limited import (from .txt)
        export to .txt or .html
        tested/installation instructions on 3 platforms
        improvements to web site
        other improvements
      not done
        assigning code to classes (so easy, efficient manipulation of more complex things)
          try it w/ todos! contacts!
          this will really need better searching, sorting, filtering, default filters, export (& import?).  Prioritize well.
        sharing/collaboration
        graphical/mobile UI
        easier installation
        much more
      .
    .
  .
  goals: per iteration, from the below...
  empowerment
  execution: just do stuff for now, make things better org'd here as I go.  Setting timed goals has been near useless.
  record/report/review/reconsider/repeat etc
.
%%$%
DEVELOPMENT: release plan/milestones:   "story points, ship by? version: theme", details
  next milestone
    when try out the fsc speed improvements in scala 11? does it work 4 me?

    ck the "om bug"s in vt.

    5 design/initial work of how to allow code associated w/ objects: behaviors/actions/verbs
      OR: should anything below be done 1st like relations, boolean, files, so I can add more data to the system!?
      
      so can quickly update todos, for example, as done, edit, move to date, &c.
      
      ideas2integratebelow
        how would such code be tested w/ good habits etc?
        
        need a way to assoc an entity w/ a class
          existing (does checks?) or new, entity or class either combo.
        .
        the code is as simple as a comparator (for sorting)
        om provides for the code an iterator over entities, and runs the code on each? or what?
        the user can draw from whatever fields are desired, in creating an entity, from its class 
          not all required
          indicates which ones
          can sort on those
          if the code ever finds a field not present it is smart enough to ignore it? even in user-gen'd code? OR simply rather, to use default values from the defining entity.
        limit deletion of defining entities. 
          (maybe db alr does, due to the constraints, and we would just be making it friendly, if/when.)
        todos could include a simple priority number (or any entity could; among many other things in those todos), upon which they could be sorted easily.
          manual sorting, IF imple someday, would simply use this # right?  unless the user cares re their own entries & wants to keep it separate, so then we'd need a separate #.
        .
        will need a way to edit default text (how to other java apps find a system editor? or put that on backlog for portability, just do what makes sense for now w/ process executor and editor var like git does or such?).
          or embed a simple one?
          and/or tell user where the file is tmp saved, they can edit, it will retrieve when said 'done'?
        .
        text & date probably need to be shown first.
        maybe w/ a boolean that says "is appointment/has a time", or just find those w/ the time filled in, and can query those or sort them at the top AND SCROLL THRU THEM.
        
        thus the sorting can be arbitrarily rich, w/o getting complicated all the time.
        sorting could retrieve only N rows/time fr db, then keep the top N of them for display (as the logic goes thru more rows, until all if needed, or just those for display)? Or find out based on avail. memory how many to get and do as many as possible, or...?  Just pick some #'s for now, and do that; it should be fine, just decide how often to go back to the database, or do it every time for simplicity and to get started.  !
          or find a way to get only certain ones from the db, or other optimizations, maybe sometime.
        .
        getting url, webpg, etc from other account (A WAY TO PUT WEB INFO INTO OM!)
          OR: SHOULD THIS BE MODELED INSTEAD OF SAVING ALL THAT TEXT?? OR WHAT?
          
          have a place to put scripts like this
            logic inside code that libr available (imported already) to run external cmds & get data back?
              contribute that to apache!!?? or rewrite myself, first.
            run the script (in pieces?)
            put the output in the right entity, in right list, whatever
          .
          set up sudoers (visudo) for running commands as another user 
            lacall ALL=(lacall-net) NOPASSWD: /usr/bin/xclip
          ...then can run the cmd to get whatever's on that clipboard (where ":2" is that user's $DISPLAY value)
            sudo -u lacall-net xclip -o -d "localhost:2"
              ...where the 2 needs modification per x session.
              BUT it doesn't seem to work under X
                msg
                  $ sudo -u lacall-net xclip -o -d "localhost:2"
                  Error: Can't open display: localhost:2
              ...but does from a console (ie, display w/o x).
                would it work from an app launched not from bash but from elsewhere?
                would it work if I mess w/ xauth enough?
          ...THEN:
            wget it and save date retrieved
            transform that to text using some cmd from the beginning or ending screen of output from 
              aptitude search html
            put the url, date retrieved, and text into an entity?
            also put text into a summary/excerpts field
              which the user can conveniently edit down to the interesting parts
                author? title? quotes? date/something?
            have a subject, short descr?
            
          .
          then also? see if the site URL AND ip addr is in my /etc/hosts file, and if not, sugg it to the user?, and save site info over time?
            an interesting way to not have my own dns server? Or, what best?
          .
          or is it time to start doing dns on my own, or focus on the OM trust networks?
        .
        for code that operates on classes, if data not there, it chooses how to act in the case of a null (so make it None so the code knows & has2decide).  AND: how will the system track & manage changes over time, like to store the fact that fields were removed in case it is intersting info in itself or that knowledge affects the desired logic?
        .
      .
      org/vsgeer the below? scope it?
      
      .
      where stored
        held by classes 
        is there any better plc than in classes
        its own table that relates to classes
      how to embed/run?
        what lang?
          options
            scala
            guile/scheme
            custom DSL
              or livecode?
            other 
          .
          how decide?
            does book talk re DSLs?
            can do scala easily now, or guile (read up on, but it does raise the skill level req'd maybe too much? or can be simple w/ the little schemer or such?)
              then try DSLs later?
            or is ruby easiest to embed? what about ease of use by laypeople? vs. jython? or allow any, easily, by some simple mechanism?
        find how to execute code from a file, w/in om
          thus then from the DB
        .
        then how to do it w/ a library
        
        then learn to use a function that looks up things by context+name? Ie, so people can use their natural lang more for this kind of programming
        
        prevent dups of attributes given key + type (might be more than just type, like length AND unit, or is that bad because we should avoid duplication of data, so just length prob'ly..?) + name in context (all names, for each context, can have only one of those?)
          OR is it really just by key + type ? what do re names: just make accessible, and **HAVE AN ASSOCIATION** such that when first encountered by the system they prompt the user for "which __? [if one of many]", then saves that perm'tly, just as a human would if you're talking w/ them, determine it from context, and IT IS FOR USERS MORE LIKE THE REAL world?
        .
        find out how to do it easily from w/in the IDE? or something to make debugging efficient?
          eg, from the repl, but with a library, or how would users ideally *want* to do it, what's easiest & more like the real world, and then how make that happen, in good steps?
        .
      .
      1st learn to 
        embed scala (repl OR interpreter)
      ...and see what the book says about DSLs 
      notes
        for todos: have 1st the fields (& logic) that *more* ppl will care about, other last?
          similarly group by roles &c? & "getting things done" (see notes fr dan stratton)?
        .
        could have a table for that (named?), which says whether each key is for a class or an entity, and then menus always assoc that w/ them & show them.
          top-level (or "system") could have them for grabbing info from other programs, maybe w/o having to go to that entity, or something. Or grab them for later filing? that initial or later filing could be fast by doing fast lookups for things based on the names used for them.
        .
      .
      how handle repeated todos: daily things that if not done don't repeat but just show up again the next day?
      and seeing upcoming calendar events?
      .
      to test on files: see 'check checksums'
    .
    ---------------------------------
    (2^)
    3 finish initial usefulness for code assoc w/ objects: make todos convenient, at least for dates?
      sortable?/prioritizing?:
        change prioritization via years gained to consider also the likelihood of that person spending those years helping others (thus a multiplier effect), and how many  others, how much for each of them, etc? (otherwise the years gained just apply to the individual)
      can show up by date
      convenient to edit to change dates &c?
      easy to survey upcoming scheduled items, all, or priority things?
    .
    ? OR POSTPONE UNTIL AFTER CAN DEMO?: .3 are postgres dumps in 'bk' backups really working?
      test a restore? both ways (from full cp and from the dump both)?
      the .gz format going ok?
      
      other re backups of om data:
        (now or later?)
        what best practice recommended (now vs. after below is done?)
        does postgres do incremental? what pg best pracs are there?
          note pg dumps have some passwd info (how does it work if a hash; any risk?)
        would sharing do it well enough?
          if tracked how many have, who, if can get back from them, if mod'd, or such?
          or just as *backups* not as only sharing?
        .
      .
    .
    ? OR POSTPONE UNTIL AFTER CAN DEMO?: adding/removing fields on an object in a class: how affects the class or other obj's
      when adding an entity to the groupMenu, and user has selected to create a new class:
        ask & store (where?) what if any default values for new ones
          and make that work for when adding: it picks those up in some good way (but don't have to store values that (don't have a defa and?) are blank right? just skip those or use defaults when doing calculations, and create them only when an edit changes them?)
            save that idea for when adding code, also (that it finds defa values if not spec'd)?
          .
          Always show the defa values when displaying, even if not saved?
            do this at some *really* low level so reliable.... and well tested.
          .
        .
        allow editing these, and it allows filling w/ defa values, and if nothing there before and user changes it, save the new value. 
        
        when adding a field that's not in the archetype
          ask or always?:  add it to the archetype also, or make this one different? In a group, enforced or....?
            can it just be something "extra" on that entity that makes it dif't from the rest of the class, or...?
              if dif't, then when doing code/other on it, it shows clearly which are part of the archetype (parent) and which aren't?
            .
          .
        .
      .
      asks if should modify all in the class, or create a new class? what best?  Or, could just consider removed ones "null" now.
      
      default aren't necessarily saved unless changed, but are available as defaults if the user wants to edit them? 
        user will have to confirm/keep them, because changing the defaults otherwise would mess up any existing oens.
      .
      so maybe user has to keep or delete each default, or just have them be null unless assigned for each field?
      
      then they're available if wants to add them later.
        and/or just pick them from a list to add?
      .
      would be nice to be able to sort them, so user can do the most common first then stop, or skip thru some & use some others, &c, and skip the rest if desired.
      when you change an entity (add/edit/del attrib or relat) that the system could/should ask the user if the same change applies to objects "like this one" (probably those that have been initially formed in its image, possibly those that it was formed like, or optionally those in a class that the user can define by query, list, etc) [same goes for add/delete property or relationship; same for delete object or create relationship or anything else?]
      
    .
    5 adding much data and making it work well....(note now, & prob'ly just move this & related stuff below to after classes/queries are working, or use cases for them?)
      how much of this is set up by defa for new systems? any? or later, not impt now?
      
      org contacts by attr or category? (prob'ly attr, because they can be in > 1 category, but until queries work, will need to just do it by category, but noted that 4 queries later)
        can be both, automatically somehow? consider thoughts on how to auto-enter data
      .
      plays by role (or all, like queries/contacts above?) by category(1st for now, but), then by attribute(mainly?--but after queries ready).
      
      Maybe this includes some stuff from next dated sections
        'relations and direction'
      
      add data
        siblings
        children
        __?
        wait4classes - Home Depot's phone number is _____
        wait4classes then?: My employer is _________
    .
    by nov 9? 0.0.6: replaces spreadsheet & any other notes
      CAN USE IT FOR THE DAILY HEALTH TRACKING!?:
        has code(?), import/export (w/ choice of fields, & of depth?), convenient entry?
        try it: all steps
      .
    .
  .
  is now the time to implement 'sharing'?
    (see www.onemodel.org web site for use cases, initial design ideas)

    other/later ideas, to integrate w/ those elsewhere also
      'watch for updates / watching / monito' feature
        there are various approaches to this; see 2013-12 (or 2013-11, less likely) slashdot discussion re polling vs. events, pushing monitoring, synchronous, asynchronous etc other such keywords
        
        the only news that matters is what one gets from here?
        
        except what about urgent danger, ie threats in the whole world env't?
          maybe such threats are stored in the model as a 'risk' thing on all entities?
            including geographic, or affecting one's immed fam or friends (distance things)?
            and the threats are attached to the risks, w/ dates, allowing for updates
            as a possible bad future under all entities, or some such? 
              see how I store possible future now....should that go as a defa (from template) on *all* entities?
          .
          maybe attach urgency to those and they are 'push' or such, or the 1st thing that one gets when checking?
            with a "see within" time
            could be tech threats, safety, or whatever attaches to things in the model that one cares about?
          .
          maybe an urgent notices table, everything else is pulled based on the client human's priority?
          
          how would normal news fall into this
            deciding what one cares about
              things pass a threshhold
              nature of threat or change
            .
            types of news
              great ideas/tips
              changes to law, tech, culture, society, good habits &c
              crime/disasters/bad things happening
                a % threshhold or geographic proximity? otherwise one can simply check stats or periodic summary of how places are...if one is going there? 
                  like a place's crime rate based on proximity & severity, frequency?, & assoc best pracs?
                  best pracs that change by locale due to culture or other factors there vs. in oneself being there?
              human interest stories
              sports
              weather
              &c?
              industry-specific
              other-specific
            .
          .
          integrity of leaders of things that would affect investments or votes
          
          major actions by society, institutions, indivs, whatever, or trends, that would affect decision-making for any of the areas one cares about & its risks (see org notes on 'investing' for more ideas/thots there).
        .
      .
      everything has a last changed date?
        entity's last changed date would be the last date of any of its attrs/rels, but not rel'd entities?
      .
  .
  Can now also add data like this, smoothly?:
    My shoes are in the study by the door
    The honda and the truck are about due for an oil change
    where to put things like recipes & howtos?
    someone likes something in their Christmas stocking
      like is a change in emo state (up or down) based on a condition at a time? do all that, or just simply?
    .
    One good place to take the family camping is xyz lake, according to coworker
      put in ideals/family/recreation/ideas? goodness measured in some code, based on quality?
    .
  .
  set future plans & milestones?:
    simulations? can this cover everything, even if we have to break an object down into components, to be able to model/describe/depict/do simulations? Probably need to read up on simulations & modeling more, after I get v.1 out in a form I can use.
      simulations (related to how I'd handle verbs?): ideas of mine from 12oct2003:
              Participants in simul. are the ones selected by user and all that are proximallyimmediately related. any entity "affected" (state changed) during th simul. pulls in to th simul. as well all its related entities. (Limit toal #? or try both & see if affects so optimized either by some limit to total # of participants in simul. or by guessing which to omit because relahionship is distant or not affected enough?) 
              
              Entities to participate in simul. need scripts that respond to events like changes to geogr. location of neighbors., time, or whatever events) could affect them. The simulation management code (or related objects?) calls these events (or related obj's call them to pass on th effects, while still respecting the timslicing of the simul.?).
              
              thread management tool makes sure the simeslicing happens fairly, and granular "enough" (per "n" instructions have a timeslice?)
              
              How make these easy to invoke & run & write event handler code on objects & prepare & get and/or save results, or auto-update model & show consiquences or inconsistencies in the model based on relatiosn & natural consequences of events in the simulation?--for the user or internal system who may initiate it?
              
              How make this flow into or use tools of neural nets or expert systems, that's easy for a non-articulate or non-tech user to run & enhance/improve the model & the simulation stuff (like C)?
               
              read up on simulations:
                  incl. Tom's links on SOAR toolkit, posted to om-list in oct2003.
              .
    .
    other things we listed in our orig requirements on onemodel.org
    see learning notes elsewhere
.
tech ideas%%$%
  try the fsc "-Xlint                         Enable recommended additional warnings."  option?
  run the intellij options off Analy<z>e menu & see what's to learn?
  need a 'public om' ??:
    create a big shared OM instance (integrable w/ my/others' personal?), that can have things like all public stuff, whatever growth
      where: amazon or?  multiple? alw have my own b/u copy somewhere else x3.
    .
    what login:none?
    handle concurrency better!
    sandbox
    for evals/demos too
    what top level menu?:
      see what wikip has 4 menus?
      could be:
        earth
          people
            by genealogy as FS.org
            groups
              all kinds, whatever is useful to anyone
          physical features
            continents
            oceans
            other systems
              atmospheric, etc
          past
          possible future
    wikimedia features?
  .
  use OM for social networking (or: can store OM code in OM??)
    e.g. to share code and networks of contributors
      ie collab tool, see more on that elsewhere
    make it bootstrappable though
      if so, at what point in process?
      (see github note)
    .
  .
  .
  security notes
    (see also security sectn under 'documentation')
    
    review best practices
    whitelist what can go into the database, at DB layer?
    never execute user-entered code? key exceptions protected?
    
    confirm that one user can't see the fileattributecontents of another user? mbe discovered docs below are enough:
      These 2 urls seem to conflict on that point, the safe-sounding one is likely newer:
        http://www.postgresql.org/docs/9.1/interactive/largeobjects.html
          or: file:///usr/share/doc/postgresql-doc-9.1/html/lo-implementation.html
        ...says it's ok?: search for 'grant' ...
        THIS ONE MAKES IT LOOK GOOD NOW:
          file:///usr/share/doc/postgresql-doc-9.1/html/runtime-config-compatible.html#GUC-LO-COMPAT-PRIVILEGES
        .
        http://jdbc.postgresql.org/documentation/80/binary-data.html
          search for 'security'
        https://wiki.postgresql.org/wiki/BinaryFilesInDB
          search for '8.4'
    .
    should one similarly start doing my own dns to key sites, dns-sec?, and use https or what-have-you or how are they going to keep this straight in the future? ck cost/benefit using om.
    
    relates also to 'monetized sharing of data' section
    
    irrevocably flag personal data (w/ hashes like git/bitkeeper?) with license info so if the security fails it is still clear what was authorized and what is wrongl, for those w/ a conscience or who want to sue ?  
      what few easy choices recommended?
      
      include some kind of personal DRM? can't be seen w/o your key, only in memory, and is never written, but good luck getting it out if you forget: better share w/ a few people under their own keys, and write it down for yourself.
      
      (slashdot article head l seen Sat Oct 12 12:41:06 MDT 2013 "would you secure personal data w/ drm tools?"
      
      make it so only those you define can see data, due to encr and public/private keys? (as long as you trust them not to share it or accept the risk that they can, but watermarked so you know who did?)
      
      see "trust networks" re more
    poss database sql injection if something saved there?
      so what else to escape besides single-ticks? read up on this for pgsql, or in the more general case?
      And maybe move all the pgsqld calls like to *.exec* into *separate* methods that I *always* have to call, which does the checkForBadSql call itself, so I can't forget in the future easily?
    .
    read re
        To connect to a particular database, a user must not only pass the pg_hba.conf checks, but must have the CONNECT privilege for the database. If you wish to restrict which users can connect to which databases, it's usually easier to control this by granting/revoking CONNECT privilege than to put the rules into pg_hba.conf entries.
    crit
      user only sees own stuff
      local auth only; no pwd needed
      db name like 'om-<username>', cli could specify otherwise, later?
    .
    indvidual users: who can see what? owner/author/viewer? groups, or...?  **collect requirements.
    jdbc to server layer?--or other issues related to making sure the postgresql host authentication is what we want?: 
        see jdbc part of postgresql documentation on authentication methods it accepts, & admin guide to configure them?
    .
    owner/author/viewer?
    groups (as def'd w/in om) as those
    .
    tight as a drum, perfect because simple?
      relies on os or something, instead of any code of mine?
    .
    who audits the design?
    
    MAYBE: we could write security in a way that lets you have your secure data be in a local DB, and non-secure shared stuff in a shared DB w/ some open license. That way we don't have to write any security code? Note this 4 future?
      this would have the advantage of making distributed models available
      
      it would have the disadvantage of making it less convenient to get to secure stuff via my palm vii? (since security is now handled at the web server/host level, rather than inside the om system)
      
      maybe we could get the best of both by letting a user connect to a public host, and provide connection info at runtime to the server which is only kept in memory and not given to other users; or somehow based on some secure transient info the host can auto-connect to a separate secure system? Would like suggestions here. Maybe we should define those requirements better, after reviewing our other existing requirements. How best to serve a large community (scaling to global, or not yet?)?? Make distributed work well? graceful when a dependent remote system is down? handled redundant systems so that they can replicate among themselves and you don't care if one goes down just use another?
      
      Maybe we have separate requirements here: security and redundancy and distributed storage/processing? Any others to design in now? Then go looking for good examples or how we'd design or borrow ideas for this ourselves.
    
    .

  .
  about 'maturity' models/'mentoring'
    list the areas (phys,soc/emo,phys,sp; others?)
      incl interest, desire, capacity
      or what desire *could* be if influenced? (good & bad)
        this gets into scrs: what insights do they still have4us?
    .
    for a person one desires to serve (starting w/ those closest by default? auto?), could consider these issues for 1) helping them grow towards Christ (i.e., being a complete/perfect person, balanced in the meantime whatever the criteria for that are...?), AND simply doing service for them (ways to delight?) or strengthening relationships:
      desires of their heart,wishes,dreams,whatever
        wants
      position relative to ideal growth steps(?), in all areas of life.
        needs
        (what is good)
      but be careful on all these in case one is wrong: have process checks that verify before offense/harm.
    .
    Then one does not have to communicate intentionally, but can poll or have notices when one being mentored posts critical info that suggests urgency.
      watch/subscribe/rss feed for 
    
    in each, the growth in steps
      sources: 
        ch books re teaching, parent's guide
        childhood educ stuff (charly has info?)
      do they have to come in order?
      to move forward might depend on
        motivation
          how's the relationship to motivate: trust? (see 'trust networks')
          see "influencer" &c
          faith....desire
        skills
          obedience
          practice
            intentional, overlearning, whatever
      steps could include:
        phys
        mental
        sp
        soc/emo
        
    .
    notes from org
      make it automate teaching/mentoring for success
      
      define success (follow God, learning & service; but let anyone quantify it by max human life/quality gained etc, change their assumptions or whatever to see it their way)
      
      balance in life: dif't areas etc
      Then w/ it as a guide, work on things in a rotation based on priority/growth/maintenance/roles/vsgeers, where the rotation is not 
      necessarily based on a day (but could be): find whatever is most effective. Put it in lifehacker? write articles there or how make
      money like they do myself, based on improving self/things? & SELLING SOMETHING: MAYBE MY OWN MODELS/WORK!? OR HOST
      AN EXCHANGE OF THEM W/ AD-BASED?
    .
    HOW maturity models WORK:
      concept in the large:
        id areas, dev't phases w/in those w/ prereqs to loop you back in thought, and see how best to get from one to the next, or to eval self or s.o. being mentored and see what the relationship or the individual need next to have the most joy & give glory to God.
        
        includes eval/noting/tracking/planning w/ the helping
        
        to what extent is it good to see/view/know what one lacks or what the next phases/steps are?
          can help to know it by thinking re/trying them (but maybe that's just the beginning when one IS ready).
            but by having a bunch of things in mind you can ponder/think/understand/improve: maybe that's just done by having multiple things in progress, some on the shelf in the early stage of learning.
          .
          can be a problem to know if
            it's a bad idea, you don't realize it, and don't want to be made a fool to everyone at once, but learn about it w/ one person and then change it. Or not share things that could be wrong, not yet well vetted, and so would mislead someone. 
            
            so: have right caveats on things. Don't assume mentor is always right: how manage that? just let mentee decide or....
            
            see security/privacy issues elsewhere: a person might misunderstand, be hurt, react badly: there are many things we don't trust to those who aren't trained/trusted w/ that thing, even if they do know about it. Or some knowledge that is not good for someone to have before adulthood (porn), etc. etc?
        .
      .
      process in the small?
        understand something
          visualize/think, hear, read, or see etc
        do it
        write the steps
        make it consistently reproducible by oneself
        then by others
        then think re what the prereqs and expected outcomes are (bigger-picture test, when not to do)
        then put those prereqs as prior steps or whatever to fit it into the big picture of growth/maturity models
        integrate it w/ all other parts of life in the 'ideal'
        teach it, help others (covey steps, incl "finding your voice")
        automate, intentional practice, or overlearning etc etc at some point?
        at what point find ways to eliminate, delegate things/steps/work?
          priorities & real goals or better ways or dif't probabilities of success of dif't strategies vs. their risk (c/b/r)etc can suggest eliminating something or reorging them/postponing, or changed assumptions....
          
          see process design/BPR, covey, other bus/effectiveness stuff that's related?
        .
      .
      consider levels for everything not just whether
        see article I bookmarked about software engineering journeyman/master/etc
    .
    thinking of everything in cost/benefit, in life (as a step for dif't areas) and when using the maturity model itself.
    
    in recording learnings about or w/in the maturity model (maybe ONLY within), how distinguish between hypotheses, theory, and "laws" (things w/ very high confidence)?
      for related thots, see elsewhere on confidence, rounding, significant digits, levels, confidence curves (like bell curve but based on one's guesses or other info?)?, etc?
    .
    physical health
      hygiene
        including efficiency
      nutrition
      exc
    .
    ideals
      comparing to, deciding what are next needs
      or if one goes back/regresses what to do next
      diagnosing problems, knowing how to address best
    .
    what is the right % of what kinds of virtue in indivs & populations, that enable what kinds of freedom and thus the appropriate laws?
      types?: family (chastity, support, ...?), honesty, golden rule, work, 10 commandments or noahide-like, etc?
      
      make a model, apply it to history & see if it's predictive
      if quantifiable, apply to int'l and domestic policy, such as who you let in where?
    .
  .
  see docs/requir.txt

  how to organize all the world's disparate data, so it's out there and can be more ordered for research, use by many?
    bulk import stuff from many places?
    just building/sharing as indivs as it grows?
  .

  look into using graph (& other?) databases like neo4j etc. Understand well their pros/cons, play w/ them, know when would be good, vs not?
    or reddis? aggregates as documents? ravendb? etc re database stuff avail now?
  .
  UIs
    see elsewhere
    rest
    browser
    sms/ussd?
    
    cartoon-like displays (or comic, animation), or whatever visual/graphical representation can be produced based on the data or pictures, automatically built at runtime by the system (ie not usually stored?).
      we discussed or mentioned this on the old mailing list, no?
      no patent, we have prior discussions on this, = prior art?: see in my archives or archive.org searching for 'cartoon' or 'animat':
        om-old-SAVING-for-history-like-showing-prior-art-whatever/onemodel.org-maillist--fullRawNewArchive-see-historical-name-in-git-before-removing.txt
        see also the README, and whatever it drew from
          and proj/om-sav/README-older-that-mentions-animat
        .
      .
    .
  .
  structure OM to allow a market for code & plugins 2 act on the data?  OSS or not, & lic we have now allows it?
    use cases
      run fancy queries
      create fancy objects
      do fancy operations
      certain markets moreso?
    .
  .
  how handle uncertainty?
    esp w/ quantity attrs: but others too?
    can be expr as:
      % confidence
      +/1
      certainty curve
      (and significant digits ?)
    does the existing model already let you do all this, so no problem, ppl just need an example?
  medical/research market/features: make it help doctors/medical practitioners/patients diagnose obscure things / diagnosis
    contains hunches?  research in progress? helps perform/confirm/refute studies, or at least make their usefulness more visible at the right time to the right people?
    like 'malabsorption': see wikipedia: how to put something into the body, or grab a cell, or scan or something, that can quickly determine total state of health, where health has a complete definition (adjustable per person?) no matter how complex, with all cellular molecules checked in a statistically valid way, that are what they should be (not some kind of $-likely side test, ie blood cerum vs. cellular, dif't parts of body: COMPLETE definition as far as able to determine), like eating an apple you don't have to know what's in it.
      just start somewhere, and make the best med knowledge in there, properly corroborated w/ trust networks/levels &c, and diagnostics tools, until we get to that point.
      
      and the system auto-updates confidence levels of everything, when someone's credibility changes!
  .
  Put in something that checks om's own internal integrity, data format readability
    see also 'check checksums'
    
    for all files it stores (by storing a checksum of it to compare) & mark which may be getting corruptedband need to get from backup (or the checksum is wrong). Also somehow checks all other data like the db integrity itself? Can the code be stored in it, and/or other system backups?, then back it up separately, and check the integrity of  everything as you do? What best long-term plan give this fallen world but terrestrial/celestial goals?
   
     Might also need to schedule reminders to check for all formats and make sure can still be read/displayed, or if there is a need to convert them to new formats. for old ones, save the code or something? What best?
   
  make a copy of the discussion summaries from mail archive, by month, for the list, & save it in my backups? (do I still have too much data saved at pair?)
  
  .
  'trust networks'/trust models that share/receive depending on whom you trust, for what, and corroboration.
    global knowledge based on who trusts who, really.
    http://it.slashdot.org/story/13/10/03/006248/security-after-the-death-of-trust?utm_source=rss1.0mainlinkanon&utm_medium=feed
    business model around this? what would ppl pay for? trust? donate to?
    
    for some use cases, search also for 'trust' elsewhere 
    
    trust/reputation networks (i.e., trust for those that give the reputation: built starting only w/ those ppl trust, and always updated
    
    replace or help w/ DNS because you only get updates from those you have decided to trust?
      see dns hijacking by fax issue in slashdot seen Sat Oct 12 12:44:49 MDT 2013
    
    auto-adds trust ppl to one's circle, like linkedIn, but auto reduces the trust by degrees as distance from personal verification increases?, and increases as the # of trusted people at a certain level personally also verify?

    what to trust/track, what basis?
      data about a person/entity
        cares whether does / remembers the commitment
        
        able to & really does *remember* successfully the commitment (does or follows up w/ info helpfully, if not w/in power, no longer a good idea, whatever)
        
        reports back
        
        actually meets commitments w/ *timeliness*, vs. lateness
          how timely
        .
        takes w/o asking/telling?
        tells truth as known/understood
        uses golden rule (levels)
        sheer competence, by area...?
      .
    .
    could this be used to ship packages also? to carry out commerce? have some kind of barter? track vague 'credits' and could encourage service to those w/ the most of them, incl via the mechanisms elsewhere (cool project, om feature?) for doing the 'most good'.
  .

  ideas from late 2012, like ways to make education universal and esperanto popular and OM help all to find balance in life and know where/how best to grow next, and FULL EMPLOYMENT.
    see esperanto/eo elsewhere, and mentoring.
    
    note studies that you learn more french in 5 years if you spend the 1st 2 studying eo.  And how much easier than anything else (ie lowest total worldwide effort, to understand each other).
    
    a wiki via OM for/of om? sorting by benefit & future ideals?
    involve esperanto (or gellish english or wikiversity or the like) making it hte best source for that thing, then get other knowledge communicites on board, making it *their* lingua franca, one at a time. like where the best work is done in multiple languages, amking it hard. or where much translation is done like at the UN. Use "influencer", read a lot, & move it forw. as a universal wwiki/om for growth, rust, employment in abalancedways, all at once! and service.  
      What is the best esperanto wikipedia rea now? which titles are longer than english or by how much? grow that superiority? then among its external academic community or how gest to make it snowball? 
      maybe introduce OM 2 the esperanto community first and combine it w/ wikiversity? 
      grow such an area (or all of) in wikiversity first? b
      best courses there, for ___?
      
      subjects?
        int'l law? linguistics? other int'l academic subjects? chemistry?
      machine translation to assist in making/keeping esperanto at its forefront by moving data over always, adding new data to the eo language version first? as a default automated always? fr. all to it, for what subjects? eo itself? & others?  
      
      as an OM default or beginning?
      or make it a busines that can hire *anyone*? (if no minimum wage, especially)
      mentoring expected at all levels "trainee" incl. prisons?
      cab nbe copied
      learn business
      get a plan & prereqs?
    esperanto+om+openTestsGrowthAreas + employment + wikiversity.
    the areas
      employable skills!pay hse 1st?wiki in english or EO or OM
      areas of growth/balance in life
      revenueroles & goals
      acct on up there & backing it
      start writing
      wiki for D & me
      sell ads on our wiki?
    .
  .
  ideas for 'cool projects' cool ideas on their own, or using OM:

    web site to enter priorities and it suggests top ways to donate or serve based on what adds most value (hrs of life, quality of life) (and a similar website for employment or contract work of all kinds), i.e., how to do the 'most good'.
      -or is it a duplicate of findthebest.com (see also itsthisforthat.com) as mentioned here?:   http://news.cnet.com/8301-13577_3-20015971-36.html?part=rss&amp;subj=news&amp;tag=2547-1_3-0-20
      -or just a waste because the gospel is it, or is a way to involve everyone unitedly as far as they wish? “follow whom you will” Or could even the relief agencies of the world still use it?
      -dogood.org?
      -w/ a wiki to discuss how make it betr? Based on a github type proj? Start simple w/ mockups, tests, wicket & go from there?
      -ppl can enter needs, ways to fill them, make services available
      -similar site4employment, contract work?
      -what wojuld the opposition be, and how overcome or...? like someone else doing it wrong, in a way that distracts from good things w/ lots of noise but just isn't good (maybe that's OK, dif't sites attract dif't crowds—but we'd want to have most infl be good infl), changing criteria, ppl adv'ing 4 their charities: have a trust framework?
      -does this rely on OM under, or...?
      -or just pitch it to someone else? or....?
      -multilingual, multiculturally competent?
      -even improvements w/in the site are so tracked?
      .
      compare to redditgift or whatever that ksl.com article about sub for santa guiness paying forward &c
      
      ie people can do good, but have *fun* (gamification, rewards, &c?)
    .

    ULTIMATE HOBBY FOR MAKERS, GEEKS, OR ANYONE WHO LIKES TO BUILD STUFF OR KNOW HOW IT WORKS!!!:
      we can make stuff: home power generation w/ wind/solar, 3d printing, maker movement, free/open software & hardware, open scientific journals, it sometimes seems the sky's thelimit and we should be able to do anything.
      
      BUT CAN WE, REALLY, OR ARE WE SO DEPENDENT ON THE MODERN SOCIETY AND ITS ACCOUTREMENTS, TOOLS, INFRASTRUCTURE, ETC ETC THAT WE 
      phase 1
        a worldwide society that collaboratively builds things from *scratch*: no use of tools or outside help except outside info to learn how to do it, tools built within the project, and traded with others. Documented steps so reproducible by anyone.  See what is the best (by dif't criteria, whoever/whatevers), or *shortest* path to modern civilization, completely and totally from scratch.  Done by people still living in whatever livestyle they had or want, but the goods themselves can be traded, but only made & built upon things made *from scratch* w/in the system.  Trade can use modern means or no?
      phase 2
        some people get together to reproduce it, full-time
          have2work out legal issues of how to travel, live, extract resources & farm/build/whatever legally w/in the current world, just not using its stuff during that time.
          
          only outside help is info.
          
          they live it
          how fast can they achieve modern civ?
      phase 3
        broken up in segments, w/ specialists who do the rules only for that segment, then can get out & study?
        do phase 2, but *from memory*
      .
      notes: 
        will not be successful if we lose the key lessons of history: like that chastity before marriage and faithfulness/mutual support/respect etc w/in marriage makes families stronger, and that makes societies stronger (it's never been done by a society that completely rejects those principles, w/ long-term success, nor will it), and that honesty and the golden rule (for example) are essential or we just won't get along, thus we can't achieve much alone or together.  
      .
    .
    form a society (its own legal env't like a county?) which only allows in those who really buy in to honesty and the golden rule, and faithfulness to traditional marriage & respect w/in it.  Those judged not doing that can be sent to remediation-land, and then when repented they come back, or if they can't hack that they have to leave.  Of course can leave any time.  Avoid more laws than that...?
    .
    study: are democrats/repubs just dif't in how we approach life?
      could understanding that help with
        getting along: managing things, communicating across the dif'cs, agreeing better/sooner
        solving problems: knowing/applying when one kind is more suited to a situation
      .
      like whether 
        rules are bendable in general
        one must help others *personally*
        kinds of taking resp. or assuming others will take responsibility
        it's a "we" and responsibility is diffuse
        accountable before God vs not
      .
    .
  .
.
:folding=indent:collapsefolds=2:
